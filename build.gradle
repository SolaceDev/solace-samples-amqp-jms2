apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'application'

startScripts.enabled = false
run.enabled = false
distTar.enabled=false
distZip.enabled=false

applicationName = 'solace-samples-amqp-jms2'
version = '1.0.1'

jar {
    baseName = applicationName
    version =  version
    manifest {
        attributes 'Implementation-Title': 'Solace Getting Started Samples',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.apache.qpid:qpid-jms-client:+'
    compile 'org.apache.logging.log4j:log4j-api:+'
    compile 'org.apache.logging.log4j:log4j-core:+'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:+'
}

task createAllStartScripts() << {
     // just a placeholder
}

def scripts = [ 'messageConsumer':'com.solace.samples.MessageConsumer',
                'messageProducer':'com.solace.samples.MessageProducer',
                'simpleReplier':'com.solace.samples.SimpleReplier',
                'simpleRequestor':'com.solace.samples.SimpleRequestor',
]

scripts.each() { scriptName, className ->
        def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
        mainClassName = className
        applicationName = scriptName
        outputDir = new File(project.buildDir, 'scripts')
        classpath = jar.outputs.files + project.configurations.runtime
    }
    applicationDistribution.into('bin') {
        from(t)
        fileMode = 0755
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    createAllStartScripts.dependsOn(t)
}

installDist {
    destinationDir = new File(project.buildDir, 'staged')
}

assemble.dependsOn installDist
